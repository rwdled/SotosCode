package org.firstinspires.ftc.teamcode;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.hardware.configuration.typecontainers.ServoConfigurationType;
import com.qualcomm.robotcore.hardware.ServoControllerEx;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.hardware.ServoController;
import com.qualcomm.robotcore.hardware.HardwareMap;
//Ashton before you put it on onbotjava, MAKE SURE YOU NAME THE FILE autosample.java
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
public class autosample extends LinearOpMode{
    private ElapsedTime runtime = new ElapsedTime();
    private DcMotor leftFront = null;
    private DcMotor rightFront = null;
    private DcMotor leftBack = null;
    private DcMotor rightBack = null;
    private Servo leftservo = null;
    private Servo rightservo = null;

    @Override
    public void runOpMode() {
        leftFront = hardwareMap.get(DcMotor.class, "leftfront");
        rightFront = hardwareMap.get(DcMotor.class, "rightfront");
        leftBack = hardwareMap.get(DcMotor.class, "leftback");
        rightBack = hardwareMap.get(DcMotor.class, "rightback");
        servo1 = hardwareMap.get(Servo.class, "rightservo");
        servo2 = hardwareMap.get(Servo.class, "leftservo");

        leftFront.setDirection(DcMotorSimple.Direction.REVERSE);
        leftBack.setDirection(DcMotorSimple.Direction.REVERSE);

        waitForStart();
        runtime.reset();
        //If this works, then we can move on to the next step of the project.
        // This is a simple example of moving the robot forward for 1 second and then stopping.
        while (opModeIsActive()) {
            // Move forward for 1 second
            leftFront.setPower(1.0);
            rightFront.setPower(1.0);
            leftBack.setPower(1.0);
            rightBack.setPower(1.0);
            sleep(1000);

           

            // Move the servos to a position
            servo1.setPosition(1.0); // Set servo1 to position 1.0
            servo2.setPosition(0.0); // Set servo2 to position 0.0

            // Add more actions as needed

            break; // Exit the loop after one iteration for demonstration purposes
        }

        // public void stopMotors(){
        //      // Stop the robot
        //     leftFront.setPower(0);
        //     rightFront.setPower(0);
        //     leftBack.setPower(0);
        //     rightBack.setPower(0);

        // }
        // public void moveForward(double power, long duration) {
        //     leftFront.setPower(power);
        //     rightFront.setPower(power);
        //     leftBack.setPower(power);
        //     rightBack.setPower(power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void moveBackward(double power, long duration) {
        //     leftFront.setPower(-power);
        //     rightFront.setPower(-power);
        //     leftBack.setPower(-power);
        //     rightBack.setPower(-power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void turnLeft(double power, long duration) {
        //     leftFront.setPower(-power);
        //     rightFront.setPower(power);
        //     leftBack.setPower(-power);
        //     rightBack.setPower(power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void turnRight(double power, long duration) {
        //     leftFront.setPower(power);
        //     rightFront.setPower(-power);
        //     leftBack.setPower(power);
        //     rightBack.setPower(-power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void strafeLeft(double power, long duration) {
        //     leftFront.setPower(-power);
        //     rightFront.setPower(power);
        //     leftBack.setPower(power);
        //     rightBack.setPower(-power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void strafeRight(double power, long duration) {
        //     leftFront.setPower(power);
        //     rightFront.setPower(-power);
        //     leftBack.setPower(-power);
        //     rightBack.setPower(power);
        //     sleep(duration);
        //     stopMotors();
        // }
        // public void setServoPosition(Servo servo, double position) {
        //     servo.setPosition(position);
        // }
        // public void setServoPositions(double position1, double position2) {
        //     servo1.setPosition(position1);
        //     servo2.setPosition(position2);
        // }

    }
}